var t=Object.defineProperty,e=(e,s,i)=>((e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i)(e,"symbol"!=typeof s?s+"":s,i);import{r as s,g as i}from"./phaser-DJkhv3Fe.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();var a=s();const n=i(a);class h extends a.Scene{constructor(){super("Boot")}preload(){this.loadAssets()}loadAssets(){this.load.setPath("assets"),this.load.spritesheet("tiles","tilesets/code-land.png",{frameWidth:64}),this.load.tilemapTiledJSON("map","tilemaps/player-home.json"),this.load.atlas("player","spritesheets/player.png","spritesheets/player.json"),this.load.atlas("ducky","spritesheets/ducky.png","spritesheets/ducky.json"),this.load.atlas("copilot","spritesheets/copilot.png","spritesheets/copilot.json"),this.load.image("player-avatar","avatars/player.png"),this.load.image("copilot-avatar","avatars/copilot.png"),this.load.image("syntax-spider","avatars/syntax-spider.png"),this.load.audio("world","audio/opening.wav"),this.load.audio("battle","audio/battle.wav")}create(){this.scene.start("MainMenu")}}class o extends a.Scene{constructor(){super("MainMenu"),e(this,"background")}preload(){this.load.image("menu","assets/main-menu.png")}create(){const t=this.add.image(0,0,"menu").setOrigin(0,0);t.displayWidth=this.sys.canvas.width,t.displayHeight=this.sys.canvas.height,this.add.text(this.sys.canvas.width/2,this.sys.canvas.height/3,"DEMO",{fontFamily:"Arial Black",fontSize:80,color:"#ffffff",stroke:"#000000",strokeThickness:12,align:"center"}).setOrigin(.5),this.add.text(this.sys.canvas.width/2,this.sys.canvas.height/2+50,"Click here to start",{fontFamily:"Arial Black",fontSize:50,color:"#ffcc99",stroke:"#000000",strokeThickness:10,align:"center"}).setOrigin(.5).setInteractive({useHandCursor:!0}).on("pointerdown",(()=>this.startGame()))}startGame(){this.scene.start("World")}}class r extends n.Physics.Arcade.Sprite{constructor(t,s,i){super(t,s,i,"player"),e(this,"isTransitioning",!1),e(this,"isInBattle",!1),t.physics.add.existing(this),t.add.existing(this),this.setCollideWorldBounds(!0),this.initAnimations(t)}initAnimations(t){[{key:"walk-down",start:0,end:3},{key:"walk-up",start:4,end:7},{key:"walk-left",start:8,end:11},{key:"walk-right",start:12,end:15}].forEach((e=>{t.anims.create({key:e.key,frames:t.anims.generateFrameNames("player",{prefix:"player_",start:e.start,end:e.end}),frameRate:5,repeat:-1})}))}update(t,e){var s,i,a,n;if(this.isInBattle)return void this.setVelocity(0);this.setVelocity(0);const h=(null==(s=t.left)?void 0:s.isDown)?"left":(null==(i=t.right)?void 0:i.isDown)?"right":(null==(a=t.up)?void 0:a.isDown)?"up":(null==(n=t.down)?void 0:n.isDown)?"down":null;if(h){const t="left"===h||"right"===h?{x:"left"===h?-e:e,y:0}:{x:0,y:"up"===h?-e:e};this.setVelocity(t.x,t.y),this.anims.play(`walk-${h}`,!0)}this.body&&0===this.body.velocity.length()&&this.anims.stop(),this.body&&this.body.velocity.normalize().scale(e)}}class l extends Phaser.Physics.Arcade.Sprite{constructor(t,s,i,a,n){super(s,i,a,t),e(this,"nextMoveTime",0),s.physics.add.existing(this),s.add.existing(this),this.setCollideWorldBounds(!0),this.initAnimations(t,s,n)}initAnimations(t,e,s){[{key:"move-down",start:0,end:3},{key:"move-up",start:4,end:7},{key:"move-left",start:8,end:11},{key:"move-right",start:12,end:15}].forEach((i=>{e.anims.create({key:i.key,frames:e.anims.generateFrameNames(t,{prefix:"move-",start:i.start,end:i.end}),frameRate:s,repeat:-1})}))}update(t,e){if(this.scene.time.now>this.nextMoveTime){this.nextMoveTime=this.scene.time.now+1e3;const t=new Phaser.Math.Vector2(Phaser.Math.Between(-1,1),Phaser.Math.Between(-1,1)).normalize();this.setVelocity(t.x*e,t.y*e)}this.body&&this.body.velocity.x<0?this.anims.play("move-left",!0):this.body&&this.body.velocity.x>0?this.anims.play("move-right",!0):this.body&&this.body.velocity.y<0?this.anims.play("move-up",!0):this.body&&this.body.velocity.y>0&&this.anims.play("move-down",!0),this.x=Phaser.Math.Clamp(this.x,t.x,t.x+t.width),this.y=Phaser.Math.Clamp(this.y,t.y,t.y+t.height)}}const c=class t{constructor(s,i={}){e(this,"scene"),e(this,"textBox"),e(this,"isActive",!1),e(this,"textBoxBackground"),e(this,"innerFrame"),e(this,"button"),e(this,"depth",1e3),e(this,"config"),e(this,"dimensions"),e(this,"messageQueue",[]),e(this,"isProcessingQueue",!1),this.scene=s,this.config={...t.DEFAULT_CONFIG,...i},this.dimensions=this.calculateDimensions()}setDepth(t){this.depth=t,this.textBox&&this.textBox.setDepth(t),this.textBoxBackground&&this.textBoxBackground.setDepth(t),this.innerFrame&&this.innerFrame.setDepth(t),this.button&&this.button.setDepth(t)}create(t,e,s=!1){this.isActive?this.messageQueue.push({text:t,callback:e}):(this.isActive=!0,this.createBackgrounds(),this.createTextElement(),this.animateText(t,(()=>{this.isProcessingQueue=!1,null==e||e(),s&&this.closeScene(),this.processNextMessage()})))}processNextMessage(){if(0===this.messageQueue.length||this.isProcessingQueue)return;const t=this.messageQueue.shift();t&&(this.isProcessingQueue=!0,this.closeTextBox(),this.create(t.text,t.callback))}calculateDimensions(){const t=this.scene.cameras.main,e=this.config.width*t.width,s=this.config.height*t.height;return{width:e,height:s,x:(t.width-e)/2,y:t.height-s-.1*t.height}}createBackgrounds(){const{x:t,y:e,width:s,height:i}=this.dimensions,{borderRadius:a,padding:n}=this.config;this.textBoxBackground=this.createGraphics().fillStyle(3355443,.9).fillRoundedRect(t,e,s,i,a).lineStyle(2,16777215,1).strokeRoundedRect(t,e,s,i,a),this.innerFrame=this.createGraphics().lineStyle(2,16777215,1).strokeRoundedRect(t+n,e+n,s-2*n,i-2*n,a-5)}createTextElement(){const{x:t,y:e,width:s}=this.dimensions,{padding:i,fontSize:a}=this.config;this.textBox=this.scene.add.text(t+1.5*i,e+1.5*i,"",{fontSize:`${a}px`,color:"#ffffff",wordWrap:{width:s-3*i},padding:{left:i,right:i,top:i,bottom:i}}).setDepth(this.depth).setScrollFactor(0)}createButton(t,e){const{x:s,y:i,width:a,height:n}=this.dimensions,h=s+a-120,o=i+n-100;return this.scene.add.text(h,o,t,{fontSize:"28px",color:"#ffffff",backgroundColor:"#555555",padding:{left:20,right:20,top:10,bottom:10}}).setScrollFactor(0).setDepth(this.depth+1).setInteractive({useHandCursor:!0}).on("pointerdown",e)}createGraphics(){return this.scene.add.graphics().setDepth(this.depth).setScrollFactor(0)}animateText(t,e){let s=0,i=!1;const a=()=>{s<t.length&&!i&&(this.textBox.text+=t[s],s++,this.textBox.height>this.dimensions.height-3*this.config.padding?(i=!0,this.button=this.createButton("↓",(()=>{var e;i=!1,this.textBox.setText(""),null==(e=this.button)||e.destroy(),this.button=void 0,this.continueAnimation(t,s,a)}))):s>=t.length&&(this.button=this.createButton("OK",(()=>{this.closeTextBox(),null==e||e()}))))};this.continueAnimation(t,0,a)}continueAnimation(t,e,s){this.scene.time.addEvent({delay:this.config.textSpeed,callback:s,repeat:t.length-e-1})}updateText(t){if(this.textBox){this.textBox.setText("");let e=0;const s=()=>{e<t.length&&(this.textBox.text+=t[e],e++)};this.scene.time.addEvent({delay:50,callback:s,repeat:t.length-1})}}closeTextBox(){this.isActive=!1,this.textBox&&this.textBox.destroy(),this.textBoxBackground&&this.textBoxBackground.destroy(),this.innerFrame&&this.innerFrame.destroy(),this.button&&(this.button.destroy(),this.button=void 0)}closeScene(){this.scene.scene.stop()}};e(c,"DEFAULT_CONFIG",{width:.8,height:.2,fontSize:32,padding:20,borderRadius:20,textSpeed:40});let d=c;const u=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),p=320,m=180,y=1290,x=1080;class g extends a.Scene{constructor(){super("World"),e(this,"cursors"),e(this,"player"),e(this,"map"),e(this,"worldLayer"),e(this,"textBox"),e(this,"companion"),e(this,"battleZones"),e(this,"canEnterBattle",!0),e(this,"lastBattleTile",null)}create(){this.initMap(),this.initPlayer(500,100),this.initCompanion("copilot",450,0),this.initKeyboard(),this.playBackgroundMusic(),this.textBox=new d(this),this.textBox.create("Be careful! There might be 🪲 bugs 🐛 lurking about. Use the ← ↑ → ↓ keys to move around and explore..."),this.events.on("update",(()=>this.update()))}initCompanion(t,e,s,i=1){this.companion=new l(t,this,e,s,i)}update(){var t;if(this.player&&this.cursors){if(this.scene.isPaused()||(this.player.update(this.cursors,300),null==(t=this.sound.get("world"))||t.resume()),this.updateCompanion(this.companion,100),this.updateDepths(),this.battleZones&&this.canEnterBattle){const t=this.battleZones.getTileAtWorldXY(this.player.x,this.player.y);if(t&&t!==this.lastBattleTile){this.lastBattleTile=t;const e=t.properties.enemy;this.startBattle(e)}else t||(this.lastBattleTile=null)}this.player.x>this.map.widthInPixels-50&&this.exitGame()}}updateCompanion(t,e){if(this.cursors.left.isDown||this.cursors.right.isDown||this.cursors.up.isDown||this.cursors.down.isDown){const s=this.player.x-t.x,i=this.player.y-t.y,a=3*(Math.sqrt(s*s+i*i)-e),n=Math.atan2(i,s),h=Math.cos(n)*a,o=Math.sin(n)*a;t.setVelocity(h,o),t.body&&(Math.abs(t.body.velocity.x)>Math.abs(t.body.velocity.y)?t.body.velocity.x<0?t.anims.play("move-left",!0):t.body.velocity.x>0&&t.anims.play("move-right",!0):t.body.velocity.y<0?t.anims.play("move-up",!0):t.body.velocity.y>0&&t.anims.play("move-down",!0))}else t.setVelocity(0,0)}updateDepths(){const t=[this.player,this.companion];t.sort(((t,e)=>t.y-e.y)),t.forEach(((t,e)=>{t.setDepth(e)}))}initMap(){this.map=this.make.tilemap({key:"map"});const t=this.map.addTilesetImage("code-land","tiles");this.map.createLayer("Below Player",t,0,0),this.map.createLayer("Below Player 2",t,0,0),this.worldLayer=this.map.createLayer("World",t,0,0);const e=this.map.createLayer("Above Player",t,0,0);null==e||e.setDepth(10),this.worldLayer.setCollisionByProperty({collides:!0}),this.physics.world.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels),this.cameras.main.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels),this.battleZones=this.map.createLayer("Battle",t,0,0),this.battleZones.setVisible(!1)}initPlayer(t=0,e=0){this.player=new r(this,t,e),this.physics.add.collider(this.player,this.worldLayer),this.cameras.main.startFollow(this.player,!0,.09,.09)}initKeyboard(){this.input.keyboard&&(this.cursors=this.input.keyboard.createCursorKeys())}playBackgroundMusic(){this.sound.add("world",{loop:!0,volume:.5}),this.sound.play("world")}startBattle(t){if(!this.canEnterBattle)return;this.canEnterBattle=!1,this.player.isInBattle=!0,this.player.isTransitioning=!0,this.player.setVelocity(0,0),this.player.anims.stop(),this.sound.pauseAll();const e=this.sound.add("battle",{volume:0,loop:!0});this.cameras.main.flash(400),this.tweens.add({targets:e,volume:.5,duration:1e3}),this.cameras.main.fadeOut(800,0,0,0),this.time.delayedCall(800,(()=>{this.scene.launch("Battle",{enemy:t,battleMusic:e,onBattleEnd:()=>{this.player.isInBattle=!1,this.player.isTransitioning=!1,this.sound.resumeAll(),this.scene.resume(),this.cameras.main.fadeIn(800),this.time.delayedCall(2e3,(()=>{this.canEnterBattle=!0}))}}),this.scene.pause()}))}exitGame(){this.player.isTransitioning=!0,this.player.setVelocity(0,0),this.player.anims.stop(),this.cursors.left.enabled=!1,this.cursors.right.enabled=!1,this.cursors.up.enabled=!1,this.cursors.down.enabled=!1,this.textBox.create("End of Demo - Thank you for playing!",(()=>{this.sound.stopAll(),this.cameras.main.fadeOut(250,0,0,0),this.time.delayedCall(250,(()=>{this.scene.start("MainMenu")}))}))}}class f{constructor(t,s,i,a,n){e(this,"scene"),e(this,"x"),e(this,"y"),e(this,"width"),e(this,"height"),e(this,"maxHealth"),e(this,"currentHealth"),e(this,"color"),e(this,"healthBar"),e(this,"nameText"),e(this,"expText"),e(this,"healthText"),this.scene=t,this.x=s,this.y=i,this.width=500,this.height=30,this.maxHealth=100,this.currentHealth=this.maxHealth,this.color=65280,this.healthBar=this.scene.add.graphics(),this.nameText=t.add.text(s,i-35,a,{fontSize:"30px",color:"#ffffff"}),this.expText=t.add.text(s+this.width-50,i-35,n,{fontSize:"30px",color:"#ffffff"}),this.healthText=t.add.text(s+this.width/2,i+this.height/2,`${this.currentHealth}/${this.maxHealth}`,{fontSize:"16px",color:"#ffffff"}).setOrigin(.5),this.create()}create(){this.healthBar.clear(),this.healthBar.fillStyle(0,.8),this.healthBar.fillRoundedRect(this.x-2,this.y-2,this.width+4,this.height+4,3),this.healthBar.fillStyle(5592405,.8),this.healthBar.fillRoundedRect(this.x,this.y,this.width,this.height,3);const t=this.currentHealth/this.maxHealth*this.width;this.healthBar.fillStyle(this.color,.8),this.healthBar.fillRoundedRect(this.x,this.y,t,this.height,3),this.healthText.setText(`${this.currentHealth}/${this.maxHealth}`),this.healthText.setPosition(this.x+this.width/2,this.y+this.height/2),this.nameText.x=this.x,this.nameText.y=this.y-40,this.expText.x=this.x+this.width-this.expText.width,this.expText.y=this.y-40}update(t){this.currentHealth=Math.max(0,t),this.create()}}function w(t,e,s){switch(s){case"Rotate Full Circle":t.tweens.add({targets:e,angle:360,duration:1e3,ease:"Power2",onComplete:()=>console.log("Rotate Full Circle effect completed on target")});break;case"Fade Out and In":t.tweens.add({targets:e,alpha:0,duration:500,yoyo:!0,repeat:1,onComplete:()=>console.log("Fade Out and In effect completed on target")});break;case"Shrink and Expand":t.tweens.add({targets:e,scaleX:.5,scaleY:.5,duration:500,yoyo:!0,onComplete:()=>console.log("Shrink and Expand effect completed on target")});break;case"Glow":t.tweens.add({targets:e,alpha:{from:1,to:.5},duration:100,yoyo:!0,repeat:5,onComplete:()=>console.log("Glow effect completed on target")});break;case"Dissolve with Glitter":t.tweens.add({targets:e,alpha:0,duration:500,ease:"Power2",onComplete:()=>console.log("Dissolve with Glitter effect completed on target")});break;default:t.tweens.add({targets:e,tint:{from:16777215,to:16711680},duration:100,yoyo:!0,repeat:3,onComplete:()=>console.log("Blink Red effect completed on target")})}}const b={PLAYER:{avatar:"player-avatar",attacks:{"Console Log":{points:10},"Use Debugger":{points:20},"Run Profiler":{points:30}}},COPILOT:{avatar:"copilot-avatar",attacks:{"Inspect Code":{points:10,effect:"Rotate Full Circle"},"Fix Bug":{points:20,effect:"Rotate Full Circle"},"Optimize Code":{points:30,effect:"Rotate Full Circle"}}}},B={"SYNTAX SPIDER":{attacks:{"Syntax Scramble":{points:10,effect:"Rotate Full Circle"}}}},k={COFFEE:{effect:"Shrink and Expand",points:10,on:["PLAYER"],message:"feels energized! The juice of life... ☕️"}},v=["DEBUG","EXCHANGE","ITEMS","RUN"];class S{constructor(t,s){e(this,"scene"),e(this,"textBox"),e(this,"textBoxBackground"),e(this,"innerFrame"),e(this,"actionTexts",[]),e(this,"subMenuTexts",[]),e(this,"selectedIndex",0),e(this,"arrow"),e(this,"exitCallback"),e(this,"isSubMenuActive",!1),e(this,"companionSprites",[]),e(this,"currentCompanionIndex",0),e(this,"enemyHealthBar"),e(this,"playerHealthBar"),this.scene=t,this.exitCallback=s}create(t,e,s){this.createHealthBars(e,s);const i=this.scene.cameras.main,a=.5*i.width,n=.25*i.height,h=i.scrollX+(i.width-1.8*a)/2,o=i.scrollY+i.height-n-.05*i.height,r=30;this.textBoxBackground=this.scene.add.graphics(),this.textBoxBackground.fillStyle(3355443,.9),this.textBoxBackground.fillRoundedRect(h,o,a,n,20),this.textBoxBackground.lineStyle(2,16777215,1),this.textBoxBackground.strokeRoundedRect(h,o,a,n,20),this.textBoxBackground.setDepth(r),this.innerFrame=this.scene.add.graphics(),this.innerFrame.lineStyle(2,16777215,1),this.innerFrame.strokeRoundedRect(h+10,o+10,a-20,n-20,15),this.innerFrame.setDepth(r),this.textBox=this.scene.add.text(h+30,o+30,"",{fontSize:"32px",color:"#ffffff",wordWrap:{width:a-60},padding:{left:20,right:20,top:20,bottom:20}}),this.textBox.setDepth(r);const l=h+a+20,c=.7*a,d=n,u=this.scene.add.graphics();u.fillStyle(3355443,.9),u.fillRoundedRect(l,o,c,d,20),u.lineStyle(2,16777215,1),u.strokeRoundedRect(l,o,c,d,20),u.setDepth(r);const p=this.scene.add.graphics();p.lineStyle(2,16777215,1),p.strokeRoundedRect(l+10,o+10,c-20,d-20,15),p.setDepth(r),this.actionTexts=[],v.forEach(((t,e)=>{const s=this.scene.add.text(l+c/2,o+50+40*e,t,{fontSize:"35px",color:"white",padding:{left:10,right:10,top:10,bottom:10}}).setOrigin(.5).setInteractive();s.setDepth(r),this.actionTexts.push(s)})),this.arrow=this.scene.add.text(0,0,"►",{fontSize:"28px",color:"#ffffff"}).setOrigin(.5).setDepth(r),this.updateArrowPosition(),this.scene.tweens.add({targets:this.arrow,scaleX:1.2,scaleY:1.2,duration:500,yoyo:!0,repeat:-1}),this.scene.input.keyboard&&(this.scene.input.keyboard.on("keydown-UP",(()=>this.moveSelectionUp())),this.scene.input.keyboard.on("keydown-DOWN",(()=>this.moveSelectionDown())),this.scene.input.keyboard.on("keydown-ENTER",(()=>this.selectAction())),this.scene.input.keyboard.on("keydown-ESC",(()=>this.closeSubMenu()))),this.updateText(t)}createHealthBars(t,e){this.enemyHealthBar=new f(this.scene,this.scene.cameras.main.originX,50,e,"Lv. 5"),this.playerHealthBar=new f(this.scene,this.scene.cameras.main.width-500,this.scene.cameras.main.height-400,t,"Lv. 10")}createSubMenu(t,e){t.push("BACK");const s=this.scene.cameras.main,i=.5*s.width,a=.25*s.height,n=s.scrollX+(s.width-1.8*i)/2,h=s.scrollY+s.height-a-.05*s.height,o=n+i+20,r=.7*i,l=a,c=this.scene.add.graphics();c.fillStyle(3355443,.9),c.fillRoundedRect(o,h,r,l,20),c.lineStyle(2,16777215,1),c.strokeRoundedRect(o,h,r,l,20),c.setDepth(30),c.setName("subMenuBackground");const d=this.scene.add.graphics();d.lineStyle(2,16777215,1),d.strokeRoundedRect(o+10,h+10,r-20,l-20,15),d.setDepth(30),d.setName("subMenuFrame"),this.subMenuTexts=[],t.forEach(((t,s)=>{const i=this.scene.add.text(o+r/2,h+50+40*s,t,{fontSize:"35px",color:"BACK"===t?"#ffffff":e,padding:{left:10,right:10,top:10,bottom:10}}).setOrigin(.5).setInteractive();i.setDepth(30),this.subMenuTexts.push(i)})),this.isSubMenuActive=!0,this.selectedIndex=0,this.updateArrowPosition()}closeSubMenu(){var t,e;this.isSubMenuActive&&(this.subMenuTexts.forEach((t=>t.destroy())),this.subMenuTexts=[],this.isSubMenuActive=!1,this.selectedIndex=0,this.updateArrowPosition(),null==(t=this.scene.children.getByName("subMenuBackground"))||t.destroy(),null==(e=this.scene.children.getByName("subMenuFrame"))||e.destroy())}moveSelectionUp(){this.selectedIndex=(this.selectedIndex-1+(this.isSubMenuActive?this.subMenuTexts.length:this.actionTexts.length))%(this.isSubMenuActive?this.subMenuTexts.length:this.actionTexts.length),this.updateArrowPosition()}moveSelectionDown(){this.selectedIndex=(this.selectedIndex+1)%(this.isSubMenuActive?this.subMenuTexts.length:this.actionTexts.length),this.updateArrowPosition()}getAttacksForParticipant(t){return t in b?b[t].attacks:{}}selectAction(){if(this.isSubMenuActive){const t=this.subMenuTexts[this.selectedIndex].text;"BACK"===t||this.applyActionEffect(t),this.closeSubMenu()}else{const t=this.actionTexts[this.selectedIndex].text;if("RUN"===t)this.updateText("Got away safely!"),this.scene.time.addEvent({delay:500,callback:()=>{this.closeTextBox(),this.exitCallback()}});else{let e=[];const s="white";switch(t){case"DEBUG":{const t=this.getActiveParticipant(),s=this.getAttacksForParticipant(t);e=Object.keys(s);break}case"EXCHANGE":{const t=this.getActiveParticipant();e=Object.keys(b).filter((e=>e!==t));break}case"ITEMS":{const t=k||[];e=Object.keys(t);break}default:e=[]}this.createSubMenu(e,s)}}}getActiveParticipant(){const t=this.scene.children.getByName("playerSprite");return t?t.texture.key.toUpperCase().replace("-AVATAR",""):""}applyActionEffect(t){if(t in b)this.changeActiveParticipant(t),this.updateText(`Switched to ${t}!`);else if(t in k){const e=this.getActiveParticipant(),s=k[t];if(s.on.includes(e)){s.message?this.updateText(`${e} +  ${s.message}`):this.updateText(`Used ${t}!`);const i=this.scene.children.getByName(`${e.toLowerCase()}Sprite`);i?w(this.scene,i,"Glow"):console.error(`${e} sprite not found`)}else this.updateText(`This item has effect on ${e}.`)}if(t in b[this.getActiveParticipant()].attacks){const e=this.getActiveParticipant(),s=b[e].attacks[t],i=s.points;this.updateText(`Used ${t}!\nEnemy took ${i} damage!`),w(this.scene,this.scene.children.getByName("enemySprite"),s.effect),this.enemyHealthBar.update(this.enemyHealthBar.currentHealth-i),this.enemyHealthBar.currentHealth<=0?(w(this.scene,this.scene.children.getByName("enemySprite"),"Dissolve with Glitter"),this.scene.time.addEvent({delay:1e3,callback:()=>{this.updateText("Player has won!"),this.scene.time.addEvent({delay:1e3,callback:()=>{this.closeTextBox(),this.exitCallback()}})}})):this.scene.time.addEvent({delay:1e3,callback:()=>{this.enemyAction()}})}}enemyAction(){const t=Object.keys(B["SYNTAX SPIDER"].attacks),e=t[Math.floor(Math.random()*t.length)],s=B["SYNTAX SPIDER"].attacks[e],i=s.points;this.updateText(`Enemy used ${e}!\nPlayer took ${i} damage!`),w(this.scene,this.scene.children.getByName("playerSprite"),s.effect),this.playerHealthBar.update(this.playerHealthBar.currentHealth-i),this.playerHealthBar.currentHealth<=0?this.scene.time.addEvent({delay:1e3,callback:()=>{this.updateText("Enemy has won!"),this.scene.time.addEvent({delay:1e3,callback:()=>{this.closeTextBox(),this.exitCallback()}})}}):this.scene.time.addEvent({delay:1e3,callback:()=>{this.updateText("What will you do?")}})}changeActiveParticipant(t){const e=this.scene.children.getByName("playerSprite");e&&e.setTexture(`${t.toLowerCase()}-avatar`)}changeCompanionSprite(){const t=this.companionSprites[this.currentCompanionIndex],e=(this.currentCompanionIndex+1)%this.companionSprites.length,s=this.companionSprites[e];this.scene.tweens.add({targets:t,x:t.x-200,alpha:0,duration:500,ease:"Power2",onComplete:()=>{t.setVisible(!1),this.currentCompanionIndex=e,s.setPosition(t.x-200,t.y),s.setVisible(!0),this.scene.tweens.add({targets:s,x:t.x,alpha:1,duration:500,ease:"Power2"})}})}updateArrowPosition(){const t=this.isSubMenuActive?this.subMenuTexts[this.selectedIndex]:this.actionTexts[this.selectedIndex];this.arrow.setX(t.x-t.width/2-this.arrow.width-2),this.arrow.setY(t.y),this.arrow.setColor("white"),(this.isSubMenuActive?this.subMenuTexts:this.actionTexts).forEach(((t,e)=>{e===this.selectedIndex?t.setStyle({fontSize:"40px",fontStyle:"bold"}):t.setStyle({fontSize:"35px",fontStyle:"normal"})}))}closeTextBox(){this.textBox.setVisible(!1),this.textBoxBackground.setVisible(!1),this.innerFrame.setVisible(!1),this.arrow.setVisible(!1),this.actionTexts.forEach((t=>t.setVisible(!1))),this.textBox.setText(""),this.textBox.setDepth(0),this.textBoxBackground.clear(),this.textBoxBackground.setDepth(20),this.innerFrame.clear(),this.actionTexts=[]}updateText(t){this.textBox.setText(t),this.textBox.setWordWrapWidth(this.textBox.width)}}e(S,"DEFAULT_CONFIG",{width:.8,height:.2,fontSize:32,padding:20,borderRadius:20,textSpeed:40});class T extends a.Scene{constructor(){super("Battle"),e(this,"interface"),e(this,"battleMusic"),e(this,"onBattleEnd")}create(t){this.interface=this.createBattleInterface(),this.startBattle(t)}startBattle(t={enemy:"default enemy",battleMusic:this.sound.add("battle-music"),onBattleEnd:()=>{}}){this.initializeBattleMusic(t),this.fadeInCamera();const e=this.calculateSpriteSize();this.spawnEnemySprite(e),this.spawnPlayerSprite(e),this.interface.create("A wild Bug appeared...\n\n\nWhat will you do?","PLAYER",t.enemy)}initializeBattleMusic(t){this.battleMusic=t.battleMusic,this.onBattleEnd=t.onBattleEnd,this.battleMusic.play(),this.tweens.add({targets:this.battleMusic,volume:.5,duration:1e3})}fadeInCamera(){this.cameras.main.fadeIn(500)}createBattleInterface(){return new S(this,(()=>this.exitBattle()))}calculateSpriteSize(){return.5*Math.min(this.cameras.main.width,this.cameras.main.height)}spawnEnemySprite(t){const e=.75*this.cameras.main.width,s=.3*this.cameras.main.height,i=this.add.image(e,s,"syntax-spider").setName("enemySprite");i.setScale(t/Math.max(i.width,i.height)),i.x=-i.width,this.tweens.add({targets:i,x:e,duration:1e3,ease:"Power2"})}spawnPlayerSprite(t){const e=.25*this.cameras.main.width,s=.48*this.cameras.main.height,i=this.add.image(e,s,"player-avatar").setName("playerSprite");i.setScale(t/Math.max(i.width,i.height)),i.x=this.cameras.main.width+i.width,this.tweens.add({targets:i,x:e,duration:1e3,ease:"Power2"})}exitBattle(){this.battleMusic.stop(),this.cameras.main.fadeOut(400,0,0,0,((t,e)=>{if(1===e){const t=this.scene.get("World");this.scene.resume("World"),t.cameras.main.resetFX(),t.cameras.main.fadeIn(400),t.time.delayedCall(2e3,(()=>{t.canEnterBattle=!0})),this.scene.stop("Battle"),this.onBattleEnd()}}))}}const M=[h,o,g,T],A={title:"GitHub Guardians",version:"1.0.0",width:y,height:x,type:n.AUTO,physics:{default:"arcade",arcade:{debug:!1}},disableContextMenu:!1,scale:{parent:"app",mode:n.Scale.FIT,autoCenter:n.Scale.CENTER_BOTH,min:{width:p,height:m},max:{width:y,height:x}},scene:[...M],zoom:1};const E=new a.Game(A);E.events.on("ready",(()=>{u&&function(t){var e,s,i,a;const n=function(){var t;const e=document.createElement("div");e.className="touch-controls left";const s=document.createElement("button");s.className="touch-button",s.id="up",s.innerHTML="⬆";const i=document.createElement("button");i.className="touch-button",i.id="left",i.innerHTML="⬅";const a=document.createElement("button");a.className="touch-button",a.id="down",a.innerHTML="⬇";const n=document.createElement("button");return n.className="touch-button",n.id="right",n.innerHTML="➡",e.appendChild(s),e.appendChild(i),e.appendChild(a),e.appendChild(n),null==(t=document.getElementById("app"))||t.appendChild(e),{leftControls:e}}(),h={up:null==(e=t.input.keyboard)?void 0:e.addKey("W"),left:null==(s=t.input.keyboard)?void 0:s.addKey("A"),down:null==(i=t.input.keyboard)?void 0:i.addKey("S"),right:null==(a=t.input.keyboard)?void 0:a.addKey("D")};n.leftControls.addEventListener("touchstart",(t=>{const e=t.target;if(e.classList.contains("touch-button"))switch(t.preventDefault(),e.id){case"up":h.up&&(h.up.isDown=!0);break;case"left":h.left&&(h.left.isDown=!0);break;case"down":h.down&&(h.down.isDown=!0);break;case"right":h.right&&(h.right.isDown=!0)}})),n.leftControls.addEventListener("touchend",(t=>{const e=t.target;if(e.classList.contains("touch-button"))switch(e.id){case"up":h.up&&(h.up.isDown=!1);break;case"left":h.left&&(h.left.isDown=!1);break;case"down":h.down&&(h.down.isDown=!1);break;case"right":h.right&&(h.right.isDown=!1)}}))}(E.scene.scenes[0])}));
