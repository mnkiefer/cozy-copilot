var e=Object.defineProperty,t=(t,s,a)=>((t,s,a)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[s]=a)(t,"symbol"!=typeof s?s+"":s,a);import{p as s}from"./phaser-nUMyL2sp.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class a extends s.Scene{constructor(){super("Boot")}preload(){this.load.image("clouds","assets/clouds.png")}create(){this.scene.start("Preloader")}}class i extends Phaser.Physics.Arcade.Sprite{constructor(e,s,a){super(e,s,a,"player",0),t(this,"direction"),this.direction="down",e.add.existing(this),e.physics.add.existing(this),e.anims.create({key:"walk_down",frames:e.anims.generateFrameNumbers("player",{start:0,end:3}),frameRate:5,repeat:-1}),e.anims.create({key:"walk_up",frames:e.anims.generateFrameNumbers("player",{start:4,end:7}),frameRate:5,repeat:-1}),e.anims.create({key:"walk_left",frames:e.anims.generateFrameNumbers("player",{start:8,end:11}),frameRate:5,repeat:-1}),e.anims.create({key:"walk_right",frames:e.anims.generateFrameNumbers("player",{start:12,end:15}),frameRate:5,repeat:-1})}}class r extends Phaser.Physics.Arcade.Sprite{constructor(e,s,a){super(e,s,a,"copilot",0),t(this,"direction"),this.direction="down",e.add.existing(this),e.physics.add.existing(this),e.anims.create({key:"copilot_walk_down",frames:e.anims.generateFrameNumbers("copilot",{start:0,end:3}),frameRate:3,repeat:-1}),e.anims.create({key:"copilot_walk_up",frames:e.anims.generateFrameNumbers("copilot",{start:4,end:7}),frameRate:3,repeat:-1}),e.anims.create({key:"copilot_walk_left",frames:e.anims.generateFrameNumbers("copilot",{start:8,end:11}),frameRate:3,repeat:-1}),e.anims.create({key:"copilot_walk_right",frames:e.anims.generateFrameNumbers("copilot",{start:12,end:15}),frameRate:3,repeat:-1})}}const o={stoppingDistance:50,springForce:.5,damping:.9,minMovementSpeed:10};const n={tileSize:64,decorationChance:.1};class c extends s.Scene{constructor(){super("Game"),t(this,"cursors"),t(this,"player"),t(this,"copilot"),t(this,"moveLeft",!1),t(this,"moveRight",!1),t(this,"moveUp",!1),t(this,"moveDown",!1)}preload(){this.loadAssets()}create(){!function(e,t={}){const s={...n,...t},{tileSize:a,decorationChance:i}=s,r=Math.ceil(e.sys.canvas.width/a)+1,o=Math.ceil(e.sys.canvas.height/a)+1;for(let n=0;n<r;n++)for(let t=0;t<o;t++){const s=n*a,r=t*a;e.add.sprite(s,r,"grass"),Math.random()<i&&e.add.sprite(s,r,Math.random()<.5?"bush":"flowers").setDepth(r)}}(this),this.player=new i(this,300,300),this.copilot=new r(this,350,300),this.cursors=this.input.keyboard.createCursorKeys(),this.setupCollisions(),this.player.setDepth(this.player.y),this.copilot.setDepth(this.copilot.y),this.createMobileControls()}update(){this.handleMovement(),function(e,t,s={}){const{stoppingDistance:a,springForce:i,damping:r,minMovementSpeed:n}={...o,...s},c=function(e,t){const s={x:e.x,y:e.y};switch(e.direction){case"left":s.x+=t;break;case"right":s.x-=t;break;case"up":s.y+=t;break;case"down":s.y-=t}return s}(e,a),l=Phaser.Math.Distance.Between(t.x,t.y,c.x,c.y);l>a?function(e,t,s,a,i,r){const o=Phaser.Math.Angle.Between(e.x,e.y,t.x,t.y),n=Math.cos(o)*(s-a)*i,c=Math.sin(o)*(s-a)*i;e.body&&e.setVelocity(e.body.velocity.x*r+n,e.body.velocity.y*r+c)}(t,c,l,a,i,r):t.setVelocity(0),function(e,t){if(e.body){const s=new Phaser.Math.Vector2(e.body.velocity.x,e.body.velocity.y);s.length()>t?Math.abs(s.x)>Math.abs(s.y)?s.x>0?e.anims.play("copilot_walk_right",!0):s.x<0&&e.anims.play("copilot_walk_left",!0):s.y>0?e.anims.play("copilot_walk_down",!0):s.y<0&&e.anims.play("copilot_walk_up",!0):0===s.length()&&e.anims.stop()}}(t,n)}(this.player,this.copilot),this.player.setDepth(this.player.y),this.copilot.setDepth(this.copilot.y)}loadAssets(){this.load.spritesheet("player","assets/player.png",{frameWidth:64,frameHeight:80,startFrame:0,endFrame:15}),this.load.spritesheet("water","assets/spritesheet.png",{frameWidth:64,frameHeight:128,startFrame:12,endFrame:20}),this.load.spritesheet("grass","assets/spritesheet.png",{frameWidth:64,frameHeight:128,startFrame:21,endFrame:22}),this.load.spritesheet("bush","assets/spritesheet.png",{frameWidth:64,frameHeight:64,startFrame:184,endFrame:184}),this.load.spritesheet("flowers","assets/spritesheet.png",{frameWidth:64,frameHeight:64,startFrame:165,endFrame:165}),this.load.spritesheet("copilot","assets/copilot.png",{frameWidth:64,frameHeight:80,startFrame:0,endFrame:15})}setupCollisions(){this.physics.add.collider(this.player,this.copilot,(()=>{this.player.setImmovable(!0),this.copilot.setImmovable(!0)}))}createMobileControls(){const e=this.cameras.main.width,t=this.cameras.main.height,s=.15*Math.min(e,t),a=.3*s,i=.4,r=a+s,o=t-a-s,n=this.add.circle(r,o-s,s/2,6710886,i).setScrollFactor(0).setInteractive().setDepth(1e3),c=this.add.circle(r,o+s,s/2,6710886,i).setScrollFactor(0).setInteractive().setDepth(1e3),l=this.add.circle(r-s,o,s/2,6710886,i).setScrollFactor(0).setInteractive().setDepth(1e3),h=this.add.circle(r+s,o,s/2,6710886,i).setScrollFactor(0).setInteractive().setDepth(1e3),d=new Phaser.Geom.Circle(0,0,s/1.5);[n,c,l,h].forEach((e=>{e.setInteractive(d,Phaser.Geom.Circle.Contains)}));const p=(e,t)=>{e.on("pointerdown",(()=>this[t]=!0)),e.on("pointerup",(()=>this[t]=!1)),e.on("pointerout",(()=>this[t]=!1)),e.on("pointercancel",(()=>this[t]=!1))};p(l,"moveLeft"),p(h,"moveRight"),p(n,"moveUp"),p(c,"moveDown");const m=this.sys.game.device.input.touch;[n,c,l,h].forEach((e=>{e.setVisible(m)}))}handleMovement(){var e,t,s,a;const i={left:(null==(e=this.cursors.left)?void 0:e.isDown)||this.moveLeft,right:(null==(t=this.cursors.right)?void 0:t.isDown)||this.moveRight,up:(null==(s=this.cursors.up)?void 0:s.isDown)||this.moveUp,down:(null==(a=this.cursors.down)?void 0:a.isDown)||this.moveDown},r=this.calculateVelocity(i);this.player.setVelocity(r.x,r.y),this.updatePlayerAnimation(i,r)}calculateVelocity(e){return{x:(e.left?-160:0)+(e.right?160:0),y:(e.up?-160:0)+(e.down?160:0)}}updatePlayerAnimation(e,t){0!==t.x||0!==t.y?Math.abs(t.x)>Math.abs(t.y)?(this.player.direction=t.x>0?"right":"left",this.player.anims.play(`walk_${this.player.direction}`,!0)):(this.player.direction=t.y>0?"down":"up",this.player.anims.play(`walk_${this.player.direction}`,!0)):this.player.anims.stop()}}class l extends s.Scene{constructor(){super("MainMenu"),t(this,"background"),t(this,"land"),t(this,"logo"),t(this,"title")}preload(){this.load.image("clouds","assets/clouds.png")}create(){this.background=this.add.image(0,0,"clouds").setOrigin(0,0),this.background.displayWidth=this.sys.canvas.width,this.background.displayHeight=this.sys.canvas.height,this.logo=this.add.text(this.sys.canvas.width/2,this.sys.canvas.height/3,"Cozy Copilot",{fontFamily:"Arial Black",fontSize:50,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.title=this.add.text(this.sys.canvas.width/2,this.sys.canvas.height/2+50,"Start Game",{fontFamily:"Arial Black",fontSize:30,color:"#ffcc99",stroke:"#000000",strokeThickness:5,align:"center"}).setOrigin(.5),this.title.setInteractive({useHandCursor:!0}).on("pointerdown",(()=>this.startGame()))}startGame(){this.scene.start("Game")}}class h extends s.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"clouds"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(t=>{e.width=4+460*t}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("MainMenu")}}const d={type:Phaser.AUTO,width:768,height:1024,backgroundColor:"#2d7c45",min:{width:480,height:720},max:{width:1024,height:1280},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},dom:{createContainer:!0},parent:"game-container",physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}},scene:[a,h,l,c]};new s.Game(d);
